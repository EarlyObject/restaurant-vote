spring.datasource.url=jdbc:h2:file:./target/test;AUTO_SERVER=TRUE;INIT=runscript from 'target/classes/db/initDB.sql'\\;runscript from 'target/classes/db/populateDB.sql'
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update
spring.h2.console.enabled=true
tokenSecret=jf9i4jgu83nfl0
server.servlet.context-path=/restaurant-vote

#logging.level.org.springframework=debug

#http://www.appsdeveloperblog.com/show-hibernate-sql-query-in-spring-boot/
#logging.level.org.hibernate.SQL=debug
logging.level.org.hibernate.type.descriptor.sql=trace
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

userController.authorizationHeader.description=Bearer JWT Token
authenticationController.login.description=Authorized for concrete user, admins. Login End Point. Provide email and password in RequestBody.
userController.create.notes=Does not need authorization, open for whoever. This Web Service End Point creates User. Provide User Details in RequestBody.
userController.get.notes=Authorized for concrete user, admins. This Web Service End Point returns User Details. User userId in URL Path. For example: /users/dbkpmrTiPq1MbmFaK4LD.
userController.update.notes=Authorized for concrete user, admins. This Web Service End Point updates User Details. User userId in URL Path, userDetails in RequestBody. For example: /users/dbkpmrTiPq1MbmFaK4LD.
userController.delete.notes=Authorized for concrete user, admins. This Web Service End Point deletes existing User. User userId in URL Path. For example: /users/dbkpmrTiPq1MbmFaK4LD.
userController.getAll.notes=Authorized for admins only. This Web Service End Point returns list of all users.
userController.postVote.notes=Authorized for concrete user, admins. This Web Service End Point saves user's vote. Restaurant Id in @RequestParam. For example: /users/votes?restaurantId=1008.
userController.updateVotes.notes=Authorized for concrete user, admins. This Web Service End Point updates user's vote. Restaurant Id in @RequestParam. For example: /users/votes?restaurantId=1008.
userController.getVotes.notes=Authorized for concrete user, admins. This Web Service End Point returns the history of user's votes. Page and limit in @RequestParam (optional). For example: /users/votes.
userController.updateToAdmin.notes=Authorized for for admins only. This Web Service End Point updates existing User to Admin rank. This request is only authorized for users with Admin rights. User userId in URL Path. For example: /users/dbkpmrTiPq1MbmFaK4LD/admin.

restaurantController.create.notes=Authorized for admins only. This Web Service End Point creates Restaurant. Put Restaurant details in RequestBody (Only Restaurant name and address).
restaurantController.get.notes=Authorized for users, admins. This Web Service End Point returns Restaurant Details. Restaurant Id in URL Path. Boolean loadAll true in RequestParam if you want get restaurant with the it's menu for the current day. \
  For example: /restaurants/1008. Or /restaurants/1008?loadAll=true
restaurantController.getFiltered.notes=Authorized for users, admins. This Web Service End Point returns Restaurant Details with it's Meal Items filtered by dates. Restaurant Id in URL Path. \
  Start date and End dates in RequestParam, page and limit in @RequestParam (optional). \
  For example: /restaurants/1008/filter?start=2020-04-01&end=2020-04-30. Or /restaurants/1008/filter
restaurantController.update.notes=Authorized for admins only. This Web Service End Point updates Restaurant Details. Restaurant details in RequestBody (Only Restaurant name and address). Restaurant Id in URL Path. For example: /restaurants/1022.
restaurantController.delete.notes=Authorized for admins only. This Web Service End Point deletes existing Restaurant. Restaurant Id in URL Path. For example: /restaurants/1022.
restaurantController.getAll.notes=Authorized for users, admins. This Web Service End Point returns list of all Restaurants. Restaurant Id in URL Path. Boolean loadAll true if you want get restaurants with the its' menu for the current day. \
  Page and limit in @RequestParam (optional). For example: /restaurants?page=0&limit=10&loadAll=true

mealController.create.notes=Authorized for admins only. This Web Service End Point creates Meal. Put Meal details in RequestBody. Put date in format yyyy-MM-dd, for example "2020-05-03"
mealController.get.notes=Authorized for admins only. This Web Service End Point returns Meal Details. Put Meal details in RequestBody. Meal Id in URL Path. For example: /meals/1016.
mealController.update.notes=Authorized for admins only. This Web Service End Point updates Meal Details. Meal details in RequestBody . Put date in format yyyy-MM-dd, for example "2020-05-03". \
  Meal Id in URL Path. For example: /meals/1016.
mealController.delete.notes=Authorized for admins only. This Web Service End Point deletes existing Meal. Meal Id in URL Path. For example: /meals/1016.
mealController.getAll.notes=Authorized for admins only. This Web Service End Point returns list of all Meal Items. Meal Id in URL Path. \
  Page and limit in @RequestParam (optional). For example: /meals?page=1&limit=15.
